"""
üöÄ LIST COMPREHENSION AVAN√áADA EM PYTHON
----------------------------------------
Este c√≥digo demonstra:
1. List comprehension b√°sica para transforma√ß√£o de dados
2. List comprehension com condicionais
3. Desempacotamento de dicion√°rios
4. Formata√ß√£o de sa√≠da para melhor visualiza√ß√£o
"""

# üîÑ List comprehension b√°sica (dobrando valores)
numeros = [numero * 2 for numero in range(10)]
print('N√∫meros dobrados:', numeros)  # üñ®Ô∏è [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]

# üõí Dados de produtos originais
produtos = [
    {'nome': 'p1', 'preco': 20},
    {'nome': 'p2', 'preco': 10},
    {'nome': 'p3', 'preco': 30},
]

# üí∞ Aplicando aumento de 5% apenas em produtos > R$20
novos_produtos = [
    {**produto, 'preco': round(produto['preco'] * 1.05, 2)}  # ‚úèÔ∏è Aumento 5%
    if produto['preco'] > 20 else {**produto}  # ü§î Condicional
    for produto in produtos  # üîÑ Itera√ß√£o
]

# üñ®Ô∏è Exibindo resultados formatados
print('\nProdutos atualizados:')
print(*novos_produtos, sep='\n')  # üì¶ Desempacota e separa por linhas

"""
üí° AN√ÅLISE DO C√ìDIGO:
1. {**produto} cria uma c√≥pia do dicion√°rio original
2. round(valor, 2) garante 2 casas decimais para pre√ßos
3. A condicional if/else √© aplicada a cada item
4. print(*lista, sep='\n') formata a sa√≠da verticalmente

üìå EXEMPLOS ADICIONAIS:
"""
# üè∑Ô∏è Filtrando produtos caros
produtos_caros = [p for p in produtos if p['preco'] > 20]
print('\nProdutos caros:', produtos_caros)

# üè∑Ô∏è Apenas nomes de produtos
nomes = [p['nome'] for p in produtos]
print('Nomes dos produtos:', nomes)

"""
‚ö†Ô∏è CUIDADOS:
1. Evite list comprehensions muito complexas
2. Para transforma√ß√µes muito elaboradas, prefira loops tradicionais
3. Cuidado com mutabilidade ao copiar dicion√°rios

‚ú® BOAS PR√ÅTICAS:
1. Use para transforma√ß√µes simples e claras
2. Adicione coment√°rios para l√≥gicas condicionais complexas
3. Formate a sa√≠da para melhor legibilidade
4. Documente o prop√≥sito da transforma√ß√£o
"""

"""
üìö APRENDIZADOS:
1. Como usar condicionais em list comprehension
2. T√©cnicas para manipular dicion√°rios
3. Formata√ß√£o de sa√≠da profissional
4. Quando usar vs evitar list comprehension
"""