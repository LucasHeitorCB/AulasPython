"""
Œª FUN√á√ïES LAMBDA EM PYTHON
--------------------------
Fun√ß√µes lambda s√£o fun√ß√µes an√¥nimas (sem nome) de uma √∫nica linha.
√öteis para opera√ß√µes simples que n√£o requerem uma fun√ß√£o definida com def.

Sintaxe: lambda argumentos: express√£o
"""

# üìã Lista de dicion√°rios (substitu√≠do 'Luiz' por 'Lucas' conforme solicitado)
lista = [
    {'nome': 'Lucas', 'sobrenome': 'miranda'},
    {'nome': 'Maria', 'sobrenome': 'Oliveira'},
    {'nome': 'Daniel', 'sobrenome': 'Silva'},
    {'nome': 'Eduardo', 'sobrenome': 'Moreira'},
    {'nome': 'Aline', 'sobrenome': 'Souza'},
]

# üñ®Ô∏è Fun√ß√£o auxiliar para exibi√ß√£o
def exibir(lista):
    for item in lista:
        print(item)
    print()  # Linha em branco para separa√ß√£o

# 1Ô∏è‚É£ Ordenando por nome usando lambda
l1 = sorted(lista, key=lambda item: item['nome'])
# Œª A lambda acessa a chave 'nome' de cada dicion√°rio

# 2Ô∏è‚É£ Ordenando por sobrenome usando lambda
l2 = sorted(lista, key=lambda item: item['sobrenome'].lower())  # üìå Added .lower() para case-insensitive

# üèÅ Exibindo resultados
print("Ordenado por nome:")
exibir(l1)

print("Ordenado por sobrenome:")
exibir(l2)

"""
üí° CARACTER√çSTICAS DAS LAMBDAS:
- S√£o fun√ß√µes de uma linha s√≥
- N√£o usam return (a express√£o √© automaticamente retornada)
- Podem ter m√∫ltiplos argumentos: lambda x, y: x + y
- S√£o frequentemente usadas com sorted(), filter(), map()

üìå EXEMPLOS ADICIONAIS:
- Multiplica√ß√£o: lambda x: x * 2
- Condicional: lambda x: 'par' if x % 2 == 0 else 'impar'
- M√∫ltiplos args: lambda x, y: x ** y
"""

"""
‚ú® BOAS PR√ÅTICAS:
1. Use lambdas para opera√ß√µes simples
2. Prefira fun√ß√µes nomeadas (def) para l√≥gica complexa
3. Mantenha lambdas leg√≠veis - se ficar muito longo, use def
4. Documente o prop√≥sito quando n√£o for √≥bvio
"""

# üÜö ALTERNATIVA COM FUN√á√ÉO NOMEADA
def get_sobrenome(item):
    return item['sobrenome'].lower()

l3 = sorted(lista, key=get_sobrenome)
print("Ordenado por sobrenome (fun√ß√£o nomeada):")
exibir(l3)