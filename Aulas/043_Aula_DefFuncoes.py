"""
üìå INTRODU√á√ÉO A FUN√á√ïES (DEF) EM PYTHON
----------------------------------------
Fun√ß√µes s√£o blocos de c√≥digo reutiliz√°veis que:
1. Organizam o c√≥digo em l√≥gicas separadas
2. Evitam repeti√ß√£o
3. Podem receber par√¢metros
4. Podem retornar valores (None por padr√£o)
"""

# üèóÔ∏è Exemplo b√°sico de defini√ß√£o de fun√ß√£o
def saudacao(nome='Sem nome'):  # üìù Par√¢metro com valor padr√£o
    """Documenta√ß√£o: Exibe sauda√ß√£o personalizada"""  # üìö Docstring
    print(f'Ol√°, {nome}!')  # üñ®Ô∏è Sa√≠da formatada

# üöÄ Chamadas da fun√ß√£o com diferentes argumentos
saudacao('Guiana')       # üë§ Argumento fornecido
saudacao('Maria')        # üë© Argumento fornecido
saudacao('Helena')       # üëµ Argumento fornecido
saudacao()               # üëª Usando valor padr√£o

"""
üí° PRINC√çPIOS FUNDAMENTAIS:
1. Defini√ß√£o: usa a palavra-chave `def`
2. Nomea√ß√£o: siga snake_case e seja descritivo
3. Par√¢metros: entre par√™nteses, com valores opcionais
4. Corpo: indentado com 4 espa√ßos
5. Docstring: documenta√ß√£o entre aspas triplas

üìå EXEMPLOS COMENTADOS:
"""
# Fun√ß√£o sem retorno expl√≠cito (retorna None)
def imprimir(a, b, c):
    print(a, b, c)

imprimir(1, 2, 3)  # üñ®Ô∏è 1 2 3
imprimir(4, 5, 6)  # üñ®Ô∏è 4 5 6

# Fun√ß√£o com m√∫ltiplos prints
def mostrar_mensagens():
    print('Mensagem 1')
    print('Mensagem 2')
    print('Mensagem 3')

"""
‚ú® BOAS PR√ÅTICAS:
1. Fun√ß√µes devem fazer UMA coisa bem feita
2. Nomes verbosos (ex: calcular_imc())
3. Limite de 3-4 par√¢metros (use *args se necess√°rio)
4. Type hints para melhor documenta√ß√£o
   Ex: def saudacao(nome: str = 'Sem nome') -> None:
"""

"""
‚ö†Ô∏è ARMADILHAS COMUNS:
1. Efeitos colaterais n√£o √≥bvios
2. Par√¢metros mut√°veis como padr√£o (ex: listas)
3. Fun√ß√µes muito longas (mais de 10-15 linhas)
"""

"""
üìö APRENDIZADOS:
1. Sintaxe b√°sica de defini√ß√£o
2. Uso de par√¢metros e argumentos
3. Valores padr√£o
4. Organiza√ß√£o de c√≥digo em fun√ß√µes
5. Princ√≠pios de fun√ß√µes bem escritas
"""