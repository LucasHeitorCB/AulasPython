"""
üîÑ RETORNO DE VALORES EM FUN√á√ïES PYTHON
---------------------------------------
A instru√ß√£o `return` encerra a fun√ß√£o e retorna um valor ao chamador.
Fun√ß√µes sem return expl√≠cito retornam `None`.
"""

def soma(x, y):
    """
    Retorna a soma de x e y, exceto quando x > 10.
    
    Args:
        x (int): Primeiro valor
        y (int): Segundo valor
        
    Returns:
        int/list: Soma dos valores ou lista [10, 20] se x > 10
    """
    if x > 10:
        return [10, 20]  # üìå Retorna lista se condi√ß√£o for verdadeira
    return x + y  # ‚ûï Retorna a soma dos valores

# üß™ Testando diferentes casos de retorno
soma1 = soma(2, 2)    # üëâ 4 (int)
soma2 = soma(3, 3)     # üëâ 6 (int)
resultado = soma(11, 55)  # üëâ [10, 20] (list)

print(soma1)    # üñ®Ô∏è 4
print(soma2)    # üñ®Ô∏è 6
print(resultado)  # üñ®Ô∏è [10, 20]

"""
üí° PRINC√çPIOS IMPORTANTES:
1. Return encerra imediatamente a execu√ß√£o da fun√ß√£o
2. Uma fun√ß√£o pode ter m√∫ltiplos returns com tipos diferentes
3. Sem return ‚Üí None √© retornado automaticamente

‚ú® BOAS PR√ÅTICAS:
1. Documente os tipos de retorno na docstring
2. Prefira retornar sempre o mesmo tipo quando poss√≠vel
3. Use type hints para esclarecer retornos:
   def soma(x: int, y: int) -> int | list: ...
"""

"""
‚ö†Ô∏è CUIDADO COM:
1. Retornos inconsistentes (dificultam o uso da fun√ß√£o)
2. Efeitos colaterais (modificar vari√°veis globais)
3. Fun√ß√µes muito longas com m√∫ltiplos returns
"""

"""
üìö APRENDIZADOS:
1. Como controlar o fluxo com return
2. Tipos m√∫ltiplos de retorno
3. Documenta√ß√£o de fun√ß√µes
4. Padr√µes de retorno consistentes
"""