"""
üßÆ OPERADORES DE ATRIBUI√á√ÉO EM PYTHON
--------------------------------------
Operadores que combinam uma opera√ß√£o matem√°tica com atribui√ß√£o.
S√£o √∫teis para escrever c√≥digo mais conciso.

Lista completa:
=   Atribui√ß√£o simples
+=  Adi√ß√£o e atribui√ß√£o
-=  Subtra√ß√£o e atribui√ß√£o
*=  Multiplica√ß√£o e atribui√ß√£o
/=  Divis√£o e atribui√ß√£o (retorna float)
//= Divis√£o inteira e atribui√ß√£o
**= Exponencia√ß√£o e atribui√ß√£o
%=  M√≥dulo e atribui√ß√£o (resto da divis√£o)
"""

contador = 10  # ‚è±Ô∏è Inicializando vari√°vel

# üß™ Opera√ß√£o de atribui√ß√£o com divis√£o
contador /= 5  # üîÑ Equivalente a: contador = contador / 5
print(contador)  # üñ®Ô∏è Resultado: 2.0 (divis√£o normal retorna float)

"""
üìö EXEMPLOS COM TODOS OPERADORES:

contador = 10
contador += 2    # 12 (10 + 2)
contador -= 3    # 9 (12 - 3)
contador *= 4    # 36 (9 √ó 4)
contador //= 5   # 7 (36 √∑ 5 como divis√£o inteira)
contador **= 2   # 49 (7 elevado a 2)
contador %= 10   # 9 (resto de 49 √∑ 10)

üí° DICA IMPORTANTE:
- Para divis√£o inteira use //
- Para divis√£o normal (float) use /
- O operador % calcula o resto da divis√£o
"""

"""
üîç COMPORTAMENTO EM DIFERENTES TIPOS:
Estes operadores tamb√©m funcionam com outros tipos:

texto = "Py"
texto += "thon"  # "Python"

lista = [1, 2]
lista += [3, 4]  # [1, 2, 3, 4]

üìå CUIDADO:
A opera√ß√£o depende do tipo do primeiro operando:
x = 10
x += 5.5  # 15.5 (converte para float)
"""

# üÜö VERS√ÉO SEM OPERADOR DE ATRIBUI√á√ÉO
contador = 10
contador = contador / 5  # Equivalente a /=
print(contador)  # Mesmo resultado: 2.0

"""
üíº USO PR√ÅTICO:
S√£o especialmente √∫teis em:
- Contadores em loops
- Acumuladores em c√°lculos
- Constru√ß√£o progressiva de strings/listas
"""